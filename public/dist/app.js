angular.module("userApp",["ngAnimate","app.routes","authService","userService","boxService","questionService","voteService","authCtrl","userCtrl","boxCtrl","questionCtrl","ui.bootstrap"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"authController",controllerAs:"auth"}).when("/register",{templateUrl:"app/views/pages/register.html",controller:"userRegisterController",controllerAs:"register"}).when("/u/:username",{templateUrl:"app/views/pages/user/profile.html",controller:"userProfileController",controllerAs:"currentUser",resolve:{userData:["User","$route",function(e,t){return e.getByUsername(t.current.params.username).then(function(e){return e.data})}],boxCount:["User","$route",function(e,t){return e.getBoxCount(t.current.params.username).then(function(e){return e.data})}],questionCount:["User","$route",function(e,t){return e.getQuestionCount(t.current.params.username).then(function(e){return e.data})}],voteCount:["User","$route",function(e,t){return e.getUpvoteCount(t.current.params.username).then(function(e){return e.data})}]}}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"usersController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}).when("/box/:box_id",{templateUrl:"app/views/pages/boxes/show.html",controller:"boxShowController",controllerAs:"showBox",resolve:{currentUser:["Auth",function(e){return e.getUser().then(function(e){return e.data})}],boxData:["Box","$route",function(e,t){return e.getById(t.current.params.box_id).then(function(e){return e.data})}],questionData:["Question","$route",function(e,t){return e.getForBox(t.current.params.box_id).then(function(e){return e.data})}]}}),t.html5Mode(!0)}]),function(){"use strict";function e(e,t,n){var o=this;o.loggedIn=n.isLoggedIn(),e.$on("$routeChangeStart",function(){o.loggedIn=n.isLoggedIn(),n.getUser().then(function(e){o.user=e.data})}),o.doLogin=function(){o.processing=!0,n.login(o.loginData.username,o.loginData.password).success(function(e){o.processing=!1,e.success?t.path("/u/"+o.loginData.username):o.error=e.message})},o.doLogout=function(){n.logout(),o.user={},t.path("/login")},o.goToProfile=function(){t.path("/u/"+o.user.username)}}angular.module("authCtrl",[]).controller("authController",e),e.$inject=["$rootScope","$location","Auth"]}(),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,t,n){var o={};return o.login=function(t,o){return e.post("/api/authenticate",{username:t,password:o}).success(function(e){return n.setToken(e.token),e})},o.logout=function(){n.setToken()},o.isLoggedIn=function(){return n.getToken()?!0:!1},o.getUser=function(){return n.getToken()?e.get("/api/me",{cache:!0}):t.reject({message:"User has no token."})},o}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,n){var o={};return o.request=function(e){var t=n.getToken();return t&&(e.headers["x-access-token"]=t),e},o.responseError=function(o){return 403==o.status&&(n.setToken(),t.path("/login")),e.reject(o)},o}]),function(){"use strict";function e(e,t,n,o,r){var s=this;s.boxData={},s.boxData.creator=n.username,s.type=o,s.createBox=function(){e.create(s.boxData).success(function(e){r.$broadcast("new-box-created",s.boxData),t.close()})},s.closeModal=function(){t.dismiss("cancel")}}angular.module("boxCtrl").controller("boxCreateController",e),e.$inject=["Box","$modalInstance","currentUser","formType","$rootScope"]}(),function(){"use strict";function e(e,t,n,o,r){var s=this;s.boxData=n,s.type=o,s.createBox=function(){e.update(s.boxData._id,s.boxData).success(function(e){r.$broadcast("new-box-created",s.boxData),t.close()})},s.closeModal=function(){t.dismiss("cancel")}}angular.module("boxCtrl").controller("boxEditController",e),e.$inject=["Box","$modalInstance","boxData","formType","$rootScope"]}(),function(){"use strict";function e(e,t){var n=this;t.getUser().success(function(e){n.currentUser=e}),n.open=function(){e.open({templateUrl:"app/views/pages/boxes/new.html",controller:"boxCreateController",controllerAs:"box",resolve:{currentUser:function(){return n.currentUser},formType:function(){return"create"}}})}}angular.module("boxCtrl").controller("boxModalController",e),e.$inject=["$modal","Auth"]}(),angular.module("boxService",[]).factory("Box",["$http",function(e){var t={};return t.getByUsername=function(t){return e.get("/api/users/"+t+"/box/")},t.create=function(t){return e.post("/api/box",t)},t.getById=function(t){return e.get("/api/box/"+t)},t.update=function(t,n){return e.put("/api/box/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/box/"+t)},t}]),function(){"use strict";function e(e,t,n,o,r,s,u,a){function i(){p.currentUser=s,p.box=u,p.box.questions=a,l=c(p.box.questions)}function c(e){for(var t={},n=0;n<e.length;n++){var o=e[n]._id;e[n].voters.map(function(e){e.voter==p.currentUser.username&&(e.upvote===!0&&(t[o]="upvote"),e.downvote===!0&&(t[o]="downvote"))})}return t}var l,p=this;p.box={},p.box.questions=[],i(),p.isUpvoted=function(e){return"upvote"===l[e]?!0:void 0},p.isDownvoted=function(e){return"downvote"===l[e]?!0:void 0},r.$on("new-question-created",function(e,t){p.box.questions.push(t)}),r.$on("vote-updated",function(e,t){l[t.id]=t.vote,p.box.questions.filter(function(e){e._id===t.id&&("upvote"===t.vote?e.votes++:e.votes--)})})}angular.module("boxCtrl").controller("boxShowController",e),e.$inject=["Box","Question","Auth","$routeParams","$scope","currentUser","boxData","questionData"]}(),function(){"use strict";function e(e,t,n,o,r,s){function u(){i.processing=!0,t.getByUsername(o.username).success(function(e){i.processing=!1,i.boxes=e})}function a(){i.processing=!0,s.getByUsername(o.username).success(function(e){i.processing=!1,i.questions=e})}var i=this;i.selectedTab="boxes",i.processing=!0,t.getByUsername(o.username).success(function(e){i.processing=!1,i.boxes=e}),s.getByUsername(o.username).success(function(e){i.processing=!1,i.questions=e}),i.getSelectedTabClass=function(e){return i.selectedTab===e?"active":""},i.changeSelectedTab=function(){i.selectedTab="boxes"===i.selectedTab?"questions":"boxes",console.log("CHANGED TO "+i.selectedTab)},i.deleteQuestion=function(e){s["delete"](i.questions[e]._id,i.questions[e]).success(function(e){a()})},i.deleteBox=function(e){t["delete"](i.boxes[e]._id).success(function(e){u()})},i.editBox=function(e){i.type="edit";r.open({templateUrl:"app/views/pages/boxes/new.html",controller:"boxEditController",controllerAs:"box",resolve:{boxData:function(){return i.boxes[e]},formType:function(){return"edit"}}})},i.editQuestion=function(e){i.type="edit";r.open({templateUrl:"app/views/pages/questions/new.html",controller:"questionEditController",controllerAs:"question",resolve:{questionData:function(){return i.questions[e]},formType:function(){return"edit"}}})},n.$on("new-box-created",function(e,t){console.log("msg is "+JSON.stringify(t,null," ")),u()})}angular.module("boxCtrl",["ui.bootstrap"]).controller("userBoxesController",e),e.$inject=["Auth","Box","$scope","$routeParams","$modal","Question"]}(),function(){"use strict";function e(e,t,n,o,r){var s=this;s.questionData={},s.questionData.box_id=n.box_id,e.getUser().success(function(e){s.questionData.creator=e.username}),r.getById(n.box_id).success(function(e){s.questionData.box_title=e.title}),s.createQuestion=function(){s.processing=!0,t.create(s.questionData).success(function(e){s.processing=!1,o.$broadcast("new-question-created",e.question),s.questionData.content=""})}}angular.module("questionCtrl",[]).controller("questionCreateController",e),e.$inject=["Auth","Question","$routeParams","$rootScope","Box"]}(),function(){"use strict";function e(e,t,n,o,r){var s=this;s.questionData=n,s.type=o,s.createQuestion=function(){e.update(s.questionData._id,s.questionData).success(function(e){t.close()})},s.closeModal=function(){t.dismiss("cancel")}}angular.module("questionCtrl").controller("questionEditController",e),e.$inject=["Question","$modalInstance","questionData","formType","$rootScope"]}(),angular.module("questionService",[]).factory("Question",["$http",function(e){var t={};return t.create=function(t){return e.post("/api/question",t)},t.getForBox=function(t){return e.get("/api/questions/"+t)},t.getByUsername=function(t){return e.get("/api/questions/u/"+t)},t.update=function(t,n){return e.put("/api/question/"+t,n)},t["delete"]=function(t,n){var o={method:"DELETE",url:"/api/question/"+t,data:n,headers:{"Content-Type":"application/json;charset=utf-8"}};return e(o)},t}]),function(){"use strict";function e(e,t,n){function o(e,t){var n={};return n.id=e,n.vote=t,n}function r(e,t){var n=e.map(function(e){return e.voter}).lastIndexOf(s.currentUser.username);return-1!==n?e[n][t]:void 0}var s=this;s.voteData={},e.getUser().success(function(e){s.currentUser=e}),s.addVote=function(e,u){var a=r(e.voters,u);a||(s.voteData.voter=s.currentUser.username,s.voteData.upvote="upvote"===u?!0:!1,s.voteData.downvote="downvote"===u?!0:!1,t.vote(e._id,s.voteData).success(function(t){console.log(t.message);var r=o(e._id,u);n.$broadcast("vote-updated",r)}))}}angular.module("questionCtrl").controller("questionVoteController",e),e.$inject=["Auth","Vote","$rootScope"]}(),function(){"use strict";function e(e){var t=this;t.type="create",t.saveUser=function(){t.processing=!0,t.message="",e.create(t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}angular.module("userCtrl").controller("userCreateController",e),e.$inject=["User"]}(),function(){"use strict";function e(e,t){var n=this;n.type="edit",t.get(e.user_id).success(function(e){n.userData=e}),n.saveUser=function(){n.processing=!0,n.message="",t.update(e.user_id,n.userData).success(function(e){n.processing=!1,n.userData={},n.message=e.message})}}angular.module("userCtrl").controller("userEditController",e),e.$inject=["$routeParams","User"]}(),function(){"use strict";function e(e,t,n,o,r,s,u){function a(){i.userData=o,i.userData.stats={},i.userData.stats.boxes=r,i.userData.stats.questions=s,i.userData.stats.upvotes=u}var i=this;a(),n.getUser().success(function(t){t.username===e.username&&(i.isCurrentUser=!0)})}angular.module("userCtrl").controller("userProfileController",e),e.$inject=["$routeParams","User","Auth","userData","boxCount","questionCount","voteCount"]}(),function(){"use strict";function e(e,t,n){var o=this;o.registerUser=function(){o.processing=!0,e.create(o.userData).success(function(e){t.login(o.userData.username,o.userData.password).success(function(e){o.processing=!1,e.success&&n.path("/u/"+o.userData.username)})})}}angular.module("userCtrl").controller("userRegisterController",e),e.$inject=["User","Auth","$location"]}(),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.getByUsername=function(t){return e.get("/api/u/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,n){return e.put("/api/users/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t.getBoxCount=function(t){return e.get("/api/users/"+t+"/stats/boxes")},t.getQuestionCount=function(t){return e.get("/api/users/"+t+"/stats/questions")},t.getUpvoteCount=function(t){return e.get("/api/users/"+t+"/stats/upvotes")},t}]),function(){"use strict";function e(e){var t=this;t.processing=!0,e.all().then(function(e){t.processing=!1,t.users=e.data}),t.deleteUser=function(n){t.processing=!0,e["delete"](n).then(function(){e.all().then(function(e){t.processing=!1,t.users=e.data})})}}angular.module("userCtrl",[]).controller("usersController",e),e.$inject=["User"]}(),angular.module("voteService",[]).factory("Vote",["$http",function(e){var t={};return t.vote=function(t,n){return e.put("/api/vote/"+t,n)},t}]);