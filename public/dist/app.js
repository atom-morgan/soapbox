angular.module("userApp",["ngAnimate","app.routes","authService","userService","boxService","questionService","authCtrl","userCtrl","boxCtrl","questionCtrl","ui.bootstrap"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"app/views/pages/home.html"}).when("/login",{templateUrl:"app/views/pages/login.html",controller:"authController",controllerAs:"auth"}).when("/register",{templateUrl:"app/views/pages/register.html",controller:"userRegisterController",controllerAs:"register"}).when("/u/:username",{templateUrl:"app/views/pages/user/profile.html",controller:"userProfileController",controllerAs:"currentUser"}).when("/users",{templateUrl:"app/views/pages/users/all.html",controller:"usersController",controllerAs:"user"}).when("/users/create",{templateUrl:"app/views/pages/users/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"app/views/pages/users/single.html",controller:"userEditController",controllerAs:"user"}).when("/box/:box_id",{templateUrl:"app/views/pages/boxes/show.html",controller:"boxShowController",controllerAs:"showBox"}),t.html5Mode(!0)}]),function(){"use strict";function e(e,t,o){var n=this;n.loggedIn=o.isLoggedIn(),e.$on("$routeChangeStart",function(){n.loggedIn=o.isLoggedIn(),o.getUser().then(function(e){n.user=e.data})}),n.doLogin=function(){n.processing=!0,o.login(n.loginData.username,n.loginData.password).success(function(e){n.processing=!1,e.success?t.path("/u/"+n.loginData.username):n.error=e.message})},n.doLogout=function(){o.logout(),n.user={},t.path("/login")},n.goToProfile=function(){t.path("/u/"+n.user.username)}}angular.module("authCtrl",[]).controller("authController",e),e.$inject=["$rootScope","$location","Auth"]}(),angular.module("authService",[]).factory("Auth",["$http","$q","AuthToken",function(e,t,o){var n={};return n.login=function(t,n){return e.post("/api/authenticate",{username:t,password:n}).success(function(e){return o.setToken(e.token),e})},n.logout=function(){o.setToken()},n.isLoggedIn=function(){return o.getToken()?!0:!1},n.getUser=function(){return o.getToken()?e.get("/api/me",{cache:!0}):t.reject({message:"User has no token."})},n}]).factory("AuthToken",["$window",function(e){var t={};return t.getToken=function(){return e.localStorage.getItem("token")},t.setToken=function(t){t?e.localStorage.setItem("token",t):e.localStorage.removeItem("token")},t}]).factory("AuthInterceptor",["$q","$location","AuthToken",function(e,t,o){var n={};return n.request=function(e){var t=o.getToken();return t&&(e.headers["x-access-token"]=t),e},n.responseError=function(n){return 403==n.status&&(o.setToken(),t.path("/login")),e.reject(n)},n}]),function(){"use strict";function e(e,t,o,n,r){var s=this;s.boxData={},s.boxData.creator=o.username,s.type=n,s.createBox=function(){e.create(s.boxData).success(function(e){r.$broadcast("new-box-created",s.boxData),t.close()})},s.closeModal=function(){t.dismiss("cancel")}}angular.module("boxCtrl").controller("boxCreateController",e),e.$inject=["Box","$modalInstance","currentUser","formType","$rootScope"]}(),function(){"use strict";function e(e,t,o,n,r){var s=this;s.boxData=o,s.type=n,s.createBox=function(){e.update(s.boxData._id,s.boxData).success(function(e){r.$broadcast("new-box-created",s.boxData),t.close()})},s.closeModal=function(){t.dismiss("cancel")}}angular.module("boxCtrl").controller("boxEditController",e),e.$inject=["Box","$modalInstance","boxData","formType","$rootScope"]}(),function(){"use strict";function e(e,t){var o=this;t.getUser().success(function(e){o.currentUser=e}),o.open=function(){e.open({templateUrl:"app/views/pages/boxes/new.html",controller:"boxCreateController",controllerAs:"box",resolve:{currentUser:function(){return o.currentUser},formType:function(){return"create"}}})}}angular.module("boxCtrl").controller("boxModalController",e),e.$inject=["$modal","Auth"]}(),angular.module("boxService",[]).factory("Box",["$http",function(e){var t={};return t.getByUsername=function(t){return e.get("/api/users/"+t+"/box/")},t.create=function(t){return e.post("/api/box",t)},t.getById=function(t){return e.get("/api/box/"+t)},t.update=function(t,o){return e.put("/api/box/"+t,o)},t["delete"]=function(t){return e["delete"]("/api/box/"+t)},t}]),function(){"use strict";function e(e,t,o,n,r){function s(e){for(var t={},o=0;o<e.length;o++){var n=e[o]._id;e[o].voters.map(function(e){e.voter==c.currentUser.username&&(e.upvote===!0&&(t[n]="upvote"),e.downvote===!0&&(t[n]="downvote"))})}return t}var u,c=this;c.box={},c.box.questions=[],o.getUser().success(function(e){c.currentUser=e}),e.getById(n.box_id).success(function(e){c.box=e}),t.getForBox(n.box_id).success(function(e){c.box.questions=e,u=s(c.box.questions),console.log("questions ",e)}),c.isUpvoted=function(e){return"upvote"===u[e]?!0:void 0},c.isDownvoted=function(e){return"downvote"===u[e]?!0:void 0},r.$on("new-question-created",function(e,t){c.box.questions.push(t)}),r.$on("vote-updated",function(e,t){u[t.id]=t.vote,c.box.questions.filter(function(e){e._id===t.id&&("upvote"===t.vote?e.votes++:e.votes--)})})}angular.module("boxCtrl").controller("boxShowController",e),e.$inject=["Box","Question","Auth","$routeParams","$scope"]}(),function(){"use strict";function e(e,t,o,n,r,s){function u(){c.processing=!0,e.getUser().success(function(e){c.user=e,t.getByUsername(c.user.username).success(function(e){c.processing=!1,c.boxes=e})})}var c=this;c.selectedTab="boxes",c.processing=!0,c.getSelectedTabClass=function(e){return c.selectedTab===e?"active":""},c.changeSelectedTab=function(){c.selectedTab="boxes"===c.selectedTab?"questions":"boxes",console.log("CHANGED TO "+c.selectedTab)},t.getByUsername(n.username).success(function(e){c.processing=!1,c.boxes=e}),s.getByUsername(n.username).success(function(e){c.processing=!1,c.questions=e}),c.deleteBox=function(e){t["delete"](c.boxes[e]._id).success(function(e){u()})},c.editBox=function(e){c.type="edit";r.open({templateUrl:"app/views/pages/boxes/new.html",controller:"boxEditController",controllerAs:"box",resolve:{boxData:function(){return c.boxes[e]},formType:function(){return"edit"}}})},o.$on("new-box-created",function(e,t){console.log("msg is "+JSON.stringify(t,null," ")),u()})}angular.module("boxCtrl",["ui.bootstrap"]).controller("userBoxesController",e),e.$inject=["Auth","Box","$scope","$routeParams","$modal","Question"]}(),function(){"use strict";function e(e){var t=this;t.type="create",t.saveUser=function(){t.processing=!0,t.message="",e.create(t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}angular.module("userCtrl").controller("userCreateController",e),e.$inject=["User"]}(),function(){"use strict";function e(e,t){var o=this;o.type="edit",t.get(e.user_id).success(function(e){o.userData=e}),o.saveUser=function(){o.processing=!0,o.message="",t.update(e.user_id,o.userData).success(function(e){o.processing=!1,o.userData={},o.message=e.message})}}angular.module("userCtrl").controller("userEditController",e),e.$inject=["$routeParams","User"]}(),function(){"use strict";function e(e,t,o){var n=this;t.getByUsername(e.username).success(function(e){n.userData=e,n.userData.stats={}}),t.getBoxCount(e.username).success(function(e){n.userData.stats.boxes=e}),t.getQuestionCount(e.username).success(function(e){n.userData.stats.questions=e}),t.getUpvoteCount(e.username).success(function(e){n.userData.stats.upvotes=e}),o.getUser().success(function(t){t.username===e.username&&(n.isCurrentUser=!0)})}angular.module("userCtrl").controller("userProfileController",e),e.$inject=["$routeParams","User","Auth"]}(),function(){"use strict";function e(e,t,o){var n=this;n.registerUser=function(){n.processing=!0,e.create(n.userData).success(function(e){t.login(n.userData.username,n.userData.password).success(function(e){n.processing=!1,e.success&&o.path("/u/"+n.userData.username)})})}}angular.module("userCtrl").controller("userRegisterController",e),e.$inject=["User","Auth","$location"]}(),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.getByUsername=function(t){return e.get("/api/u/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,o){return e.put("/api/users/"+t,o)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t.getBoxCount=function(t){return e.get("/api/users/"+t+"/stats/boxes")},t.getQuestionCount=function(t){return e.get("/api/users/"+t+"/stats/questions")},t.getUpvoteCount=function(t){return e.get("/api/users/"+t+"/stats/upvotes")},t}]),function(){"use strict";function e(e){var t=this;t.processing=!0,e.all().success(function(e){t.processing=!1,t.users=e}),t.deleteUser=function(o){t.processing=!0,e["delete"](o).success(function(o){e.all().success(function(e){t.processing=!1,t.users=e})})}}angular.module("userCtrl",[]).controller("usersController",e),e.$inject=["User"]}(),function(){"use strict";function e(e,t,o,n,r){var s=this;s.questionData={},s.questionData.box_id=o.box_id,e.getUser().success(function(e){s.questionData.creator=e.username}),r.getById(o.box_id).success(function(e){s.questionData.box_title=e.title}),s.createQuestion=function(){s.processing=!0,t.create(s.questionData).success(function(e){console.log("created! ",e),s.processing=!1,n.$broadcast("new-question-created",e.question),s.questionData.content=""})}}angular.module("questionCtrl",[]).controller("questionCreateController",e),e.$inject=["Auth","Question","$routeParams","$rootScope","Box"]}(),angular.module("questionService",[]).factory("Question",["$http",function(e){var t={};return t.create=function(t){return e.post("/api/question",t)},t.getForBox=function(t){return console.log("box id "+t),e.get("/api/questions/"+t)},t.getByUsername=function(t){return e.get("/api/questions/u/"+t)},t.vote=function(t,o){return e.put("/api/question/"+t,o)},t}]),function(){"use strict";function e(e,t,o){function n(e,t){var o={};return o.id=e,o.vote=t,o}function r(e,t){var o=e.map(function(e){return e.voter}).lastIndexOf(s.currentUser.username);return-1!==o?e[o][t]:void 0}var s=this;s.voteData={},e.getUser().success(function(e){s.currentUser=e}),s.addVote=function(e,u){var c=r(e.voters,u);c||(s.voteData.voter=s.currentUser.username,s.voteData.upvote="upvote"===u?!0:!1,s.voteData.downvote="downvote"===u?!0:!1,t.vote(e._id,s.voteData).success(function(t){console.log(t.message);var r=n(e._id,u);o.$broadcast("vote-updated",r)}))}}angular.module("questionCtrl").controller("questionVoteController",e),e.$inject=["Auth","Question","$rootScope"]}();